{
  "Address": {
    "label": "ADDRESS",
    "columns": [
      {
        "id": "Address.city",
        "label": "City",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]      
      },
      {
        "id": "Address.country",
        "label": "Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"       
      },
      {
        "id": "Address.line1",
        "label": "Line 1",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]              
      },
      {
        "id": "Address.line2",
        "label": "Line 2",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]               
      },
      {
        "id": "Address.line3",
        "label": "Line 3",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]              
      },
      {
        "id": "Address.postalCode",
        "label": "Postal Code",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]               
      },
      {
        "id": "Address.state",
        "label": "State/Province",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]            
      }
    ]
  },
  "CreditCard": {
    "label": "CREDIT CARD",
    "columns": [
      {
        "id": "CreditCard.accountHolder",
        "label": "Account Holder",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "multiple": true               
      },
      {
        "id": "CreditCard.expiration",
        "label": "Expiration Date",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "CreditCard.number",
        "label": "Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                
      },
      {
        "id": "CreditCard.cardType",
        "label": "Type",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]              
      }
    ]
  },
  "Document": {
    "label": "DOCUMENT",
    "columns": [
      {
        "id": "Document.issuanceCountry",
        "label": "Issuance Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Document.expirationDate",
        "label": "Expiration Date",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Document.issuanceDate",
        "label": "Issuance Date",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Document.documentNumber",
        "label": "Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ]                     
      },
      {
        "id": "Document.documentType",
        "label": "Type",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "doc_types"
      }
    ]
  },
  "Email": {
    "label": "EMAIL",
    "columns": [
      {
        "id": "Email.address",
        "label": "Address",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                      
      },
      {
        "id": "Email.domain",
        "label": "Domain",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      }
    ]
  },
  "Flight": {
    "label": "FLIGHT",
    "columns": [
      {
        "id": "Flight.destination",
        "label": "Airport Destination",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
      },
      {
        "id": "Flight.origin",
        "label": "Airport Origin",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
      },
      {
        "id": "Flight.carrier",
        "label": "Carrier",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]
      },
      {
        "id": "Flight.destinationCountry",
        "label": "Destination Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Flight.originCountry",
        "label": "Origin Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Flight.direction",
        "label": "Direction",
        "type": "string",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "I": "Inbound",
          "O": "Outbound"
        }
      },
      {
        "id": "Flight.mutableFlightDetails.etaDate",
        "label": "ETA",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Flight.etdDate",
        "label": "ETD",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Flight.flightNumber",
        "label": "Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                      
      },
      {
        "id": "Flight.isOperatingFlight",
        "label": "Is Operating Flight",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        }
      },
      {
        "id": "Flight.isMarketingFlight",
        "label": "Is Marketing Flight",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        }
      }
    ]
  },
  "BookingDetail": {
    "label": "FLIGHT LEG",
    "columns": [
      {
        "id": "BookingDetail.origin",
        "label": "Origin",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "multiple": true               
      },
      {
        "id": "BookingDetail.destination",
        "label": "Destination",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ] ,
        "multiple": true                  
      }
      
    ]
  },
  "FrequentFlyer": {
    "label": "FREQUENT FLYER",
    "columns": [
      {
        "id": "FrequentFlyer.carrier",
        "label": "Carrier",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      },
      {
        "id": "FrequentFlyer.number",
        "label": "Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      }
    ]
  },
  "HitsSummary": {
    "label": "HITS",
    "columns": [
      {
        "id": "HitsSummary.isRuleHit",
        "label": "Has Rule Hit",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        },
        "colors": {
          "1": "success",
          "0": "danger"
        }
      },
      {
        "id": "HitsSummary.isWatchListHit",
        "label": "Has Watch List Hit",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        },
        "colors": {
          "1": "success",
          "0": "danger"
        }
      },
      {
        "id": "HitsSummary.id",
        "label": "Rules Hit Id",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN"
        ]                     
      }
    ]
  },
  "Passenger": {
    "label": "PASSENGER",
    "columns": [
      {
        "id": "Passenger.passengerDetails.age",
        "label": "Age",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                   
      },
      {
        "id": "Passenger.passengerDetails.nationality",
        "label": "Nationality",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Passenger.passengerTripDetails.debarkation",
        "label": "Debarkation Airport",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
      },
      {
        "id": "Passenger.passengerTripDetails.debarkCountry",
        "label": "Debarkation Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Passenger.passengerDetails.dob",
        "label": "DOB",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Passenger.passengerTripDetails.embarkation",
        "label": "Embarkation Airport",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
      },
      {
        "id": "Passenger.passengerTripDetails.embarkCountry",
        "label": "Embarkation Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Passenger.passengerDetails.gender",
        "label": "Gender",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "genders"
      },
      {
        "id": "Passenger.passengerDetails.firstName",
        "label": "Name - First",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ]                       
      },
      {
        "id": "Passenger.passengerDetails.lastName",
        "label": "Name - Last",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ]                      
      },
      {
        "id": "Passenger.passengerDetails.middleName",
        "label": "Name - Middle",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH",
          "IS_NULL",
          "IS_NOT_NULL"
        ]                        
      },
      {
        "id": "Passenger.passengerDetails.residencyCountry",
        "label": "Residency Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Passenger.seat",
        "label": "Seat",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]               
      },
      {
        "id": "Passenger.passengerDetails.passengerType",
        "label": "Type",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "passenger_types"
      },
      {
        "id": "Passenger.passengerTripDetails.travelFrequency",
        "label": "Travel Frequency",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                       
      }
    ]
  },
  "Phone": {
    "label": "PHONE",
    "columns": [
      {
        "id": "Phone.number",
        "label": "Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      }
    ]
  },
  "Bag":{
  "label": "BAG",
  	"columns": [
  	  {
  	  	"id":"Bag.airline",
  	  	"label":"Airline",
  	  	"type":"string",
  	  	"operators": [
  	  	  "EQUAL",
          "NOT_EQUAL",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
  	  	]
  	  },
  	   {
  	  	"id":"Bag.bagId",
  	  	"label":"Bag Identifier",
  	  	"type":"string",
  	  	"operators": [
  	  	  "EQUAL",
          "NOT_EQUAL",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
  	  	]
  	  }, {
  	  	"id":"Bag.data_source",
  	  	"label":"Data Source",
  	  	"type":"string",
  	  	"operators": [
  	  	  "EQUAL",
          "NOT_EQUAL",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
  	  	]
  	  }, {
  	  	"id":"Bag.country",
  	  	"label":"Destination Country",
  	  	"type":"string",
  	  	"operators": [
  	  	  "EQUAL",
          "NOT_EQUAL",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
  	  	],
  	  	"input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
  	  }, {
  	  	"id":"Bag.destinationAirport",
  	  	"label":"Destination Airport",
  	  	"type":"string",
  	  	"operators": [
  	  	  "EQUAL",
          "NOT_EQUAL",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
  	  	],
  	  	"input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
  	  },
      {
        "id": "Bag.primeFlight",
        "label": "Is Prime Flight",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        }
      } ,
      {
        "id": "Bag.bagMeasurements.weight",
        "label": "Bag Weight Measurement (kg)",
        "type": "double",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]
      } ,
      {
        "id": "Bag.bagMeasurements.bagCount",
        "label": "Bag Measurement Count",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]
      },
      {
        "id": "Bag.headPool",
        "label": "Is Head Of a Baggage Pool",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        }
      }

  	]
  },
  "Pnr": {
    "label": "PNR",
    "columns": [
      {
        "id": "Pnr.bagCount",
        "label": "Bag - Count",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                       
      },
      {
        "id": "Pnr.baggageWeight",
        "label": "Baggage - Weight",
        "type": "double",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                       
      },
      {
        "id": "Pnr.dateBooked",
        "label": "Booking Date",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Pnr.carrier",
        "label": "Carrier Code",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      },
      {
        "id": "Pnr.dateReceived",
        "label": "Date Received",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Pnr.daysBookedBeforeTravel",
        "label": "Days Booked Before Travel",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                        
      },
      {
        "id": "Pnr.departureDate",
        "label": "Departure Date",
        "type": "date",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ],
        "plugin": "datepicker"
      },
      {
        "id": "Pnr.paymentForms",
        "label": "Form of Payment",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL"
        ],
        "input": "text",
        "plugin": "selectize",
        "dataSource": "form_of_payment_types"
      },
      {
        "id": "Pnr.id",
        "label": "Pnr Id",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL"
        ]
      },
      {
        "id": "Pnr.origin",
        "label": "Origin - Airport",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"
      },
      {
        "id": "Pnr.originCountry",
        "label": "Origin - Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"
      },
      {
        "id": "Pnr.passengerCount",
        "label": "Passenger Count",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                       
      },
      {
        "id": "Pnr.recordLocator",
        "label": "Record Locator",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      },
      {
        "id": "Pnr.seat",
        "label": "Seat",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]             
      },     
      {
      	"id": "Pnr.tripType",
      	"label": "Trip Type",
      	"type" : "string",
      	"input": "select",
  		  "multiple": false,		 
  		  "values": {
  		   	"ONE-WAY": "ONE-WAY",
  		   	"ROUND-TRIP":"ROUND-TRIP",
  		   	"MULTI-CITY":"MULTI-CITY",
  		   	"OPEN JAW": "OPEN JAW"
  		  },
  		  "operators": [
  		  	"EQUAL",
  		  	"NOT_EQUAL"	  	
  		 ]
      },
      {
        "id": "Pnr.tripDuration",
        "label": "Trip Duration",
        "type": "double",
       	"operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                           
      }
    ]
  },
   "DwellTime": {
    "label": "DWELL TIME",
    "columns": [
      {
        "id": "DwellTime.location",
        "label": "Location",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      },
      {
        "id": "DwellTime.dwellTime",
        "label": "Lay over Time",
        "type": "double",
       	"operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]                           
      }
    ]
  },
  "Agency": {
    "label": "TRAVEL AGENCY",
    "columns": [
      {
        "id": "Agency.country",
        "label": "Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"        
      },
      {
        "id": "Agency.identifier",
        "label": "Identifier",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      },
      {
        "id": "Agency.location",
        "label": "Location",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      },
      {
        "id": "Agency.name",
        "label": "Name",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                       
      },
      {
        "id": "Agency.city",
        "label": "City",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      },
      {
        "id": "Agency.phone",
        "label": "Phone",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]                        
      }
    ]
  },
  "FlightPax": {
    "label": "FLIGHT-PASSENGER",
    "columns": [    
      {
        "id": "FlightPax.portOfFirstArrival",
        "label": "First Arrival Port",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "CONTAINS",
          "NOT_CONTAINS"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"        
      },
      {
        "id": "FlightPax.installationAddress",
        "label": "Installation Address",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]      
      },
      {
        "id": "FlightPax.embarkation",
        "label": "Embarkation - Airport",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"       
      },
      {
        "id": "FlightPax.debarkation",
        "label": "Debarkation - Airport",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "airports"       
      },
      {
        "id": "FlightPax.reservationReferenceNumber",
        "label": "Reservation Reference Number",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ]    
      },
      {
        "id": "FlightPax.embarkationCountry",
        "label": "Embarkation - Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"       
      },
      {
        "id": "FlightPax.debarkationCountry",
        "label": "Debarkation -  Country",
        "type": "string",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "IN",
          "NOT_IN",
          "BEGINS_WITH",
          "NOT_BEGINS_WITH",
          "CONTAINS",
          "NOT_CONTAINS",
          "ENDS_WITH",
          "NOT_ENDS_WITH"
        ],
        "input": "select",
        "multiple": true,
        "plugin": "selectize",
        "dataSource": "countries"       
      },
      {
        "id": "FlightPax.bagWeight",
        "label": "Bag - Weight (kg)",
        "type": "double",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]       
      },
      {
        "id": "FlightPax.bagCount",
        "label": "Bag - Count",
        "type": "integer",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]  
      },
      {
        "id": "FlightPax.averageBagWeight",
        "label": "Bag - Average Total Weight (kg)",
        "type": "double",
        "operators": [
          "EQUAL",
          "NOT_EQUAL",
          "LESS",
          "LESS_OR_EQUAL",
          "GREATER",
          "GREATER_OR_EQUAL",
          "BETWEEN",
          "NOT_BETWEEN"
        ]   
      },
      {
        "id": "FlightPax.headOfPool",
        "label": "Is Head Of Pool",
        "type": "boolean",
        "operators": "EQUALS",
        "input": "radio",
        "values": {
          "1": "Yes",
          "0": "No"
        }   
      }
    ]
  }
}
